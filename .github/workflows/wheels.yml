# # # # # # # # #
# Source: https://github.com/miloserdova-l/mrob/blob/feature/windows-wheel/.github/workflows/wheels.yml
# # # # # # # # #
name: Build wheels

on: [push, pull_request, workflow_dispatch]

jobs:
  build:
    name: Build map_metrics project
    runs-on: ubuntu-latest
    env:
      PYTHONPATH: ./lib
    strategy:
      fail-fast: false
    steps:
      - uses: actions/checkout@v2

      - name: Install required packages from distro
        run: |
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends git build-essential g++ cmake python3-distutils python3-dev python3-numpy python3-pip
          python3 -m pip install pytest

      - name: Configure and build native map_metrics library with Python bindings
        run: |
          mkdir -p build
          cmake -S $PWD -B $PWD/build \
           -DCMAKE_RUNTIME_OUTPUT_DIRECTORY=$PWD/bin \
           -DCMAKE_LIBRARY_OUTPUT_DIRECTORY=$PWD/lib \
           -DCMAKE_BUILD_TYPE=RELEASE \
          && cmake --build build -j $(nproc)

  build_wheel_linux:
    name: Build wheel on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    container: quay.io/pypa/manylinux2010_x86_64
    needs: build
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
    steps:
      - name: Install additional utils
        run: yum install -y git openssh-clients

      - uses: actions/checkout@v1

      - name: Install fresh CMake into ManyLinux container
        run: |
          env pybin=$(LANG=C ls -d1r /opt/python/cp3*/bin | head -n 1) bash -c '$pybin/python -m pip install cmake && mkdir -p /usr/local/bin && ln -svf $pybin/cmake /usr/local/bin/cmake'
          cmake --version
      - name: Build Python wheel
        run: scripts/build-wheels-linux.sh

      - uses: actions/upload-artifact@v1
        with:
          name: artifact
          path: ./wheelhouse

  test_wheel_linux:
    name: Test Python ${{ matrix.python }} wheel on Linux
    runs-on: ubuntu-latest
    needs: build_wheel_linux
    strategy:
      fail-fast: false
      matrix:
        python: ['3.6', '3.7', '3.8', '3.9', '3.10']
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Python ${{ matrix.python }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python }}

      - name: Download artifacts
        uses: actions/download-artifact@v2

      - name: Install map_metrics & numpy
        run: |
          python -m pip install ./artifact/map_metrics-*-manylinux*.whl numpy pytest
      - name: "Python unit tests"
        run: |
          python -m pytest python

  publish_pypi:
    name: Publish wheels to PyPI
    needs:
      - test_wheel_linux
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
    runs-on: ubuntu-latest
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v2

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
          packages_dir: artifact/

  publish-github-release:
    name: Publish wheels to GitHub Releases
    needs:
      - test_wheel_linux
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
    runs-on: ubuntu-latest
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v2

      - uses: softprops/action-gh-release@v1
        with:
          files: artifact/*.whl
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
